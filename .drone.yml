pipeline:
  build-debs:
    when:
      branch: [master, av/namespacesio_pkg]
    image: gcr.io/admobilize-testing/creator-builder-${ARCHITECTURE}-${DISTRIBUTION}-${CODENAME}-${IMAGE_TAG}
    privileged: true
    body: |
      curl https://apt.matrix.one/doc/apt-key.gpg | apt-key add -
      export COMPONENT=$([ "${DRONE_BUILD_EVENT}" = "tag" ] && echo "main" || echo "unstable")
      echo "deb https://apt.matrix.one/raspbian ${CODENAME} $COMPONENT" > /etc/apt/sources.list.d/matrixlabs.list
      apt-get update
      apt-get install --yes matrixio-protobuf
      debuild -us -uc -b
      mv ../*.deb .

  upload-debs:
    when:
      branch: [master, av/namespacesio_pkg]
      event: [ push, tag ]
    image: gcr.io/admobilize-testing/gce-builder:latest
    secrets: [aws_access_key_id, aws_secret_access_key, gpg_key, gpg_pass]
    commands:
      # Prepare GPG
      - echo "$${GPG_KEY}" > /tmp/tmpkey && gpg --import /tmp/tmpkey && rm /tmp/tmpkey
      - echo "personal-digest-preferences SHA512" >> /root/.gnupg/gpg.conf

      # Only TAG events are published to main
      - export COMPONENT=$([ "${DRONE_BUILD_EVENT}" = "tag" ] && echo "main" || echo "unstable")
      - export PKG_VER=$(dpkg-parsechangelog --show-field Version -ldebian/changelog)

      # Upload packages
      - mv libmatrixio-protos_$${PKG_VER}_armhf.deb 
           libmatrixio-protos_${DISTRIBUTION}-${CODENAME}-$${PKG_VER}-$${COMPONENT}_armhf.deb
      - mv libmatrixio-protos-dev_$${PKG_VER}_armhf.deb 
           libmatrixio-protos-dev_${DISTRIBUTION}-${CODENAME}-$${PKG_VER}-$${COMPONENT}_armhf.deb

      - echo "$${GPG_PASS}" | deb-s3 upload --bucket apt.matrix.one 
        --prefix $DISTRIBUTION
        --component $COMPONENT
        --codename $CODENAME
        --access-key-id $${AWS_ACCESS_KEY_ID}
        --secret-access-key $${AWS_SECRET_ACCESS_KEY}
        --sign info@matrix.one 
        --gpg-options="--batch --passphrase-fd 0"
        libmatrixio-protos_${DISTRIBUTION}-${CODENAME}-$${PKG_VER}-$${COMPONENT}_armhf.deb
        libmatrixio-protos-dev_${DISTRIBUTION}-${CODENAME}-$${PKG_VER}-$${COMPONENT}_armhf.deb

      # Render the notification template for the notify-slack step
      - j2 --var-delimiter '%%' .drone/slack.tpl > notification.tpl

  notify-always:
    image: plugins/slack
    secrets: [slack_webhook]
    username: drone-ci-builder
    channel: notifications
    when:
      branch: [master, av/namespacesio_pkg]
      event: [ push, tag ]
    link_names: true
    template: |
      {{#success build.status}}
        {{build.author}} just built `{{repo.name}}:{{build.branch}}` from <${DRONE_COMMIT_LINK}|#{{truncate build.commit 8}}>
        :new: {{build.message}}
      {{else}}
        {{build.author}} just broke the build of `{{repo.name}}:{{build.branch}}` with >${DRONE_COMMIT_LINK}|#{{truncate build.commit 8}}
        :new: :zombie: {{build.message}}
      {{/success}}
      :stopwatch: {{ since build.started }}
      :gear: {{build.link}}

matrix:
  include: 
    - CODENAME: jessie
      DISTRIBUTION: raspbian
      ARCHITECTURE: armhf
      IMAGE_TAG: 3181f193
    
    - CODENAME: jessie
      DISTRIBUTION: raspbian
      ARCHITECTURE: armhf
      IMAGE_TAG: 3181f193
